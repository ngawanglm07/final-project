<%- include("partials/header"); -%>


  <h1>Add Topper</h1>
  <form action="/add-topper" method="post">
    <label for="name">Name:</label>
    <input type="text" id="name" name="Name" required>

    <label for="rank">Rank:</label>
    <input type="number" id="rank" name="Rank" required>

    <label for="year">Year:</label>
    <input type="number" id="year" name="Year" required>

    <label for="gs1Marks">GS1 Marks:</label>
    <input type="number" id="gs1Marks" name="GS1Marks" required>

    <label for="gs2Marks">GS2 Marks:</label>
    <input type="number" id="gs2Marks" name="GS2Marks" required>

    <label for="gs3Marks">GS3 Marks:</label>
    <input type="number" id="gs3Marks" name="GS3Marks" required>

    <label for="gs4Marks">GS4 Marks:</label>
    <input type="number" id="gs4Marks" name="GS4Marks" required>

    <label for="essayMarks">Essay Marks:</label>
    <input type="number" id="essayMarks" name="EssayMarks" required>

    <label for="prelimsScoreGS">Prelims Score GS:</label>
    <input type="number" id="prelimsScoreGS" name="PrelimsScoreGS" required>

    <label for="prelimsScoreCSAT">Prelims Score CSAT:</label>
    <input type="number" id="prelimsScoreCSAT" name="PrelimsScoreCSAT" required>

    <label for="optionalSubject">Optional Subject:</label>
    <input type="text" id="optionalSubject" name="OptionalSubject" required>

    <label for="optional1Marks">Optional 1 Marks:</label>
    <input type="number" id="optional1Marks" name="Optional1Marks" required>

    <label for="optional2Marks">Optional 2 Marks:</label>
    <input type="number" id="optional2Marks" name="Optional2Marks" required>

    <label for="remarks">Remarks:</label>
    <textarea id="remarks" name="Remarks" required></textarea>

    <button type="submit">Add Topper</button>
  </form>

  <h1>Add Mains Answer</h1>


  <form action="/add-mains-answer" method="post" enctype="multipart/form-data">
    <label for="testCode">Test Code:</label>
    <input type="text" id="testCode" name="TestCode" required>
  
    <label for="questionNumber">Question Number:</label>
    <input type="number" id="questionNumber" name="QuestionNumber" required>
  
    <label for="questionText">Question Text:</label>
    <textarea id="questionText" name="QuestionText" required></textarea>
  
    <label for="answerText">Answer Text:</label>
    <textarea id="answerText" name="AnswerText" required></textarea>


    <label for="image1">Image 1:</label>
    <input type="file" id="image1" name="image1" accept="image/*">
  
    <label for="image2">Image 2:</label>
    <input type="file" id="image2" name="image2" accept="image/*">
    
  
    <label for="image3">Image 3:</label>
    <input type="file" id="image3" name="image3" accept="image/*">
  
  <label for="writtenBy">Written By:</label>
  <input type="text" id="writtenBy" name="WrittenBy" required autocomplete="off" list="topperNames">
  <datalist id="topperNames"> </datalist>

  <label for="paper">Paper:</label>
  <input type="text" id="paper" name="Paper" required autocomplete="off" list="paperNames">
  <datalist id="paperNames"> </datalist>
  


  <label for="topicName">Topic Name:</label>
  <input type="text" id="topicName" name="TopicName" required autocomplete="on" list="topicNames">
  <datalist id="topicNames">
  </datalist>

  
    <label for="subtopicName">Subtopic Name:</label>
    <input type="text" id="subtopicName" name="SubtopicName" required  autocomplete="on" list="subtopicNames">
    <datalist id="subtopicNames">
    </datalist>



    <button type="submit">Add Mains Answer</button>
   <!-- ... (other HTML code) -->

   <script>
    // Define a function to fetch and update the datalist options
    function updateTopperNamesList() {
      var writtenByInput = document.getElementById('writtenBy');
      var datalist = document.getElementById('topperNames');
      var inputText = writtenByInput.value.trim(); // Trim whitespace
  
      // Use Axios to fetch topper names only if the inputText is not empty
      if (inputText) {
        axios.get('/topper-names', {
            params: {
              query: inputText
            }
          })
          .then(function (response) {
            // Clear existing options
            datalist.innerHTML = '';
  
            // Populate datalist with new options
            response.data.forEach(function (topper) {
              var option = document.createElement('option');
              option.value = topper.Name;
              datalist.appendChild(option);
            });
          })
          .catch(function (error) {
            console.error(error);
          });
      } else {
        // Clear datalist if the input is empty
        datalist.innerHTML = '';
      }
    }
  
    // Attach the input event listener to the 'Written By' input field
    document.getElementById('writtenBy').addEventListener('input', updateTopperNamesList);
  
    function updatePaperNamesList() {
      var paperName = document.getElementById('paper');
      var datalist = document.getElementById('paperNames');
      var inputText = paperName.value.trim(); // Trim whitespace
  
      // Use Axios to fetch topper names only if the inputText is not empty
      if (inputText) {
        axios.get('/subject', {
            params: {
              query: inputText
            }
          })
          .then(function (response) {
            // Clear existing options
            datalist.innerHTML = '';
  
            // Populate datalist with new options
            response.data.forEach(function (subject) {
              var option = document.createElement('option');
              option.value = subject.Paper;
              datalist.appendChild(option);
            });
          })
          .catch(function (error) {
            console.error(error);
          });
      } else {
        // Clear datalist if the input is empty
        datalist.innerHTML = '';
      }
    }
  
    document.getElementById('paper').addEventListener('input', updatePaperNamesList);
  
    
    function updateTopicNamesList() {
  var paperInput = document.getElementById('paper');
  var topicInput = document.getElementById('topicName');
  var subtopicInput = document.getElementById('subtopicName');
  var topicDatalist = document.getElementById('topicNames');
  var subtopicDatalist = document.getElementById('subtopicNames');  // Updated line

  var paperText = paperInput.value.trim();

  // Use Axios to fetch topics based on the selected paper
  if (paperText) {
    axios.get('/topic', {
        params: {
          query: paperText
        }
      })
      .then(function (response) {
        // Clear existing options
        topicDatalist.innerHTML = '';

        // Populate topic input with new options
        response.data.forEach(function (topic) {
          var option = document.createElement('option');
          option.value = topic.TopicName;
          topicDatalist.appendChild(option);
        });
      })
      .catch(function (error) {
        console.error(error);
      });
  } else {
    // Clear topic input if the paper input is empty
    topicDatalist.innerHTML = '';
  }

  // Additionally, you can fetch subtopics based on the selected paper and topic
  if (paperText) {
    axios.get('/subtopic', {
        params: {
          paper: paperText,
          topic: topicInput.value.trim()
        }
      })
      .then(function (response) {
        // Clear existing options
        subtopicDatalist.innerHTML = '';

        // Populate subtopic input with new options
        response.data.forEach(function (subtopic) {
          var option = document.createElement('option');
          option.value = subtopic.SubtopicName;
          subtopicDatalist.appendChild(option);
        });
      })
      .catch(function (error) {
        console.error(error);
      });
  } else {
    // Clear subtopic input if the paper or topic input is empty
    subtopicDatalist.innerHTML = '';
  }
}

// Attach the input event listener to the 'Topic' input field
document.getElementById('topicName').addEventListener('input', updateTopicNamesList);


// Attach the input event listener to the 'Topic' input field

    // Attach the input event listener to the 'Paper' input field
    document.getElementById('paper').addEventListener('input', updateTopicNamesList);
  
    // Attach the input event listener to the 'Topic' input field
  
  </script>
  

<%- include("partials/footer"); -%> 